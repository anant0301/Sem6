#! /usr/bin/vvp
:ivl_version "10.3 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "vhdl_sys";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x564865102370 .scope module, "tb" "tb" 2 2;
 .timescale 0 0;
v0x56486512e5a0_0 .var "operand1", 31 0;
v0x56486512e680_0 .var "operand2", 31 0;
v0x56486512e750_0 .var "operator", 7 0;
v0x56486512e850_0 .net "out", 31 0, v0x56486512e280_0;  1 drivers
S_0x564865114ef0 .scope module, "blk_log" "logical_unit" 2 9, 3 1 0, S_0x564865102370;
 .timescale 0 0;
    .port_info 0 /INPUT 8 "operator"
    .port_info 1 /INPUT 32 "op1"
    .port_info 2 /INPUT 32 "op2"
    .port_info 3 /OUTPUT 32 "out"
L_0x5648650ff110 .functor AND 32, v0x56486512e5a0_0, v0x56486512e680_0, C4<11111111111111111111111111111111>, C4<11111111111111111111111111111111>;
L_0x56486512e9a0 .functor XOR 32, v0x56486512e5a0_0, v0x56486512e680_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x56486512ea10 .functor NAND 32, v0x56486512e5a0_0, v0x56486512e680_0, C4<11111111111111111111111111111111>, C4<11111111111111111111111111111111>;
L_0x56486512eb10 .functor NOT 32, v0x56486512e5a0_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x56486512ebe0 .functor NOR 32, v0x56486512e5a0_0, v0x56486512e680_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x56486512ec80 .functor XNOR 32, v0x56486512e5a0_0, v0x56486512e680_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x56486512ed60 .functor OR 32, v0x56486512e5a0_0, v0x56486512e680_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x56486512edd0 .functor NOT 32, v0x56486512e5a0_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x5648650feea0_0 .net "and_out", 31 0, L_0x5648650ff110;  1 drivers
v0x5648650ff310_0 .net "comp1_out", 31 0, L_0x56486512edd0;  1 drivers
v0x5648650ff3b0_0 .net "nand_out", 31 0, L_0x56486512ea10;  1 drivers
v0x56486512dcf0_0 .net "nor_out", 31 0, L_0x56486512ebe0;  1 drivers
v0x56486512ddd0_0 .net "not_out", 31 0, L_0x56486512eb10;  1 drivers
v0x56486512df00_0 .net "op1", 31 0, v0x56486512e5a0_0;  1 drivers
v0x56486512dfe0_0 .net "op2", 31 0, v0x56486512e680_0;  1 drivers
v0x56486512e0c0_0 .net "operator", 7 0, v0x56486512e750_0;  1 drivers
v0x56486512e1a0_0 .net "or_out", 31 0, L_0x56486512ed60;  1 drivers
v0x56486512e280_0 .var "out", 31 0;
v0x56486512e360_0 .net "xnor_out", 31 0, L_0x56486512ec80;  1 drivers
v0x56486512e440_0 .net "xor_out", 31 0, L_0x56486512e9a0;  1 drivers
E_0x564865110620/0 .event edge, v0x56486512e0c0_0, v0x5648650feea0_0, v0x56486512e440_0, v0x5648650ff3b0_0;
E_0x564865110620/1 .event edge, v0x56486512e1a0_0, v0x56486512ddd0_0, v0x56486512dcf0_0, v0x5648650ff310_0;
E_0x564865110620/2 .event edge, v0x56486512e360_0;
E_0x564865110620 .event/or E_0x564865110620/0, E_0x564865110620/1, E_0x564865110620/2;
    .scope S_0x564865114ef0;
T_0 ;
    %wait E_0x564865110620;
    %load/vec4 v0x56486512e0c0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 8;
    %cmp/u;
    %jmp/1 T_0.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 8;
    %cmp/u;
    %jmp/1 T_0.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 8;
    %cmp/u;
    %jmp/1 T_0.2, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 8;
    %cmp/u;
    %jmp/1 T_0.3, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 8;
    %cmp/u;
    %jmp/1 T_0.4, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 8;
    %cmp/u;
    %jmp/1 T_0.5, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 8;
    %cmp/u;
    %jmp/1 T_0.6, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 8;
    %cmp/u;
    %jmp/1 T_0.7, 6;
    %jmp T_0.8;
T_0.0 ;
    %vpi_call 3 35 "$display", $time, " AND" {0 0 0};
    %load/vec4 v0x5648650feea0_0;
    %assign/vec4 v0x56486512e280_0, 0;
    %jmp T_0.8;
T_0.1 ;
    %vpi_call 3 39 "$display", $time, " XOR" {0 0 0};
    %load/vec4 v0x56486512e440_0;
    %assign/vec4 v0x56486512e280_0, 0;
    %jmp T_0.8;
T_0.2 ;
    %vpi_call 3 43 "$display", $time, " NAND" {0 0 0};
    %load/vec4 v0x5648650ff3b0_0;
    %assign/vec4 v0x56486512e280_0, 0;
    %jmp T_0.8;
T_0.3 ;
    %vpi_call 3 47 "$display", $time, " OR" {0 0 0};
    %load/vec4 v0x56486512e1a0_0;
    %assign/vec4 v0x56486512e280_0, 0;
    %jmp T_0.8;
T_0.4 ;
    %vpi_call 3 51 "$display", $time, " NOT operand 1 taken" {0 0 0};
    %load/vec4 v0x56486512ddd0_0;
    %assign/vec4 v0x56486512e280_0, 0;
    %jmp T_0.8;
T_0.5 ;
    %vpi_call 3 55 "$display", $time, " NOR" {0 0 0};
    %load/vec4 v0x56486512dcf0_0;
    %assign/vec4 v0x56486512e280_0, 0;
    %jmp T_0.8;
T_0.6 ;
    %vpi_call 3 59 "$display", $time, " 2's Complement" {0 0 0};
    %load/vec4 v0x5648650ff310_0;
    %addi 1, 0, 32;
    %assign/vec4 v0x56486512e280_0, 0;
    %jmp T_0.8;
T_0.7 ;
    %vpi_call 3 63 "$display", $time, " XNOR" {0 0 0};
    %load/vec4 v0x56486512e360_0;
    %assign/vec4 v0x56486512e280_0, 0;
    %jmp T_0.8;
T_0.8 ;
    %pop/vec4 1;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x564865102370;
T_1 ;
    %vpi_call 2 17 "$display", "0) bitwise AND \0121) bitwise XOR \0122) bitwise NAND \0123) bitwise OR \0124) bitwise NOT \0125) bitwise NOR \0126) 2's Complement \0127) bitwise XNOR \012" {0 0 0};
    %end;
    .thread T_1;
    .scope S_0x564865102370;
T_2 ;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x56486512e5a0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x56486512e680_0, 0, 32;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x56486512e750_0, 0, 8;
    %delay 5, 0;
    %pushi/vec4 1, 0, 8;
    %store/vec4 v0x56486512e750_0, 0, 8;
    %delay 5, 0;
    %pushi/vec4 2, 0, 8;
    %store/vec4 v0x56486512e750_0, 0, 8;
    %delay 5, 0;
    %pushi/vec4 3, 0, 8;
    %store/vec4 v0x56486512e750_0, 0, 8;
    %delay 5, 0;
    %pushi/vec4 4, 0, 8;
    %store/vec4 v0x56486512e750_0, 0, 8;
    %delay 5, 0;
    %pushi/vec4 5, 0, 8;
    %store/vec4 v0x56486512e750_0, 0, 8;
    %delay 5, 0;
    %pushi/vec4 6, 0, 8;
    %store/vec4 v0x56486512e750_0, 0, 8;
    %delay 5, 0;
    %pushi/vec4 7, 0, 8;
    %store/vec4 v0x56486512e750_0, 0, 8;
    %end;
    .thread T_2;
    .scope S_0x564865102370;
T_3 ;
    %vpi_call 2 41 "$monitor", $time, "operand1= %h, operand2= %h, operator= %h, out= %h", v0x56486512e5a0_0, v0x56486512e680_0, v0x56486512e750_0, v0x56486512e850_0 {0 0 0};
    %end;
    .thread T_3;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "tb.v";
    "./logical_unit.v";
